#!/bin/bash

runCommand()
{
    if [ "$1" == "mpiexec" ]; then sol="$4"; else sol="$1"; fi
    sol=$(basename -- "$sol")
    sol="${sol%.*}"
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

%{%(MeshUtility%)
%:gmsh
runCommand '%(GmshSettings/Executable%)' - "gmsh/%(Name%)_Geometry.geo"

%}
%{%(FoamRuntime%)
%:MinGW
%:WindowsDocker
%:BlueCFD
%:BlueCFD2
%:default
# Unset and source bashrc
if [ -f "%(TranslatedFoamPath%)/etc/config/unset.sh" ]; then  # for OF < 4
   source "%(TranslatedFoamPath%)/etc/config/unset.sh" 2> /dev/null
else
   source "%(TranslatedFoamPath%)/etc/config.sh/unset" 2> /dev/null
fi
source "%(TranslatedFoamPath%)/etc/bashrc"

%}
%{%(MeshUtility%)
%:cfMesh
# Extract feature edges
runCommand surfaceFeatureEdges -angle 60 "constant/triSurface/%(Name%)_Geometry.stl" "%(Name%)_Geometry.fms"
%{%(ParallelMesh%)
%:True
%{%(NumberOfThreads%)
%:0
export OMP_NUM_THREADS=1
%:default
export OMP_NUM_THREADS=%(NumberOfThreads%)
%}
runCommand preparePar
runCommand mpiexec -np %(NumberOfProcesses%) cartesianMesh -parallel
runCommand reconstructParMesh -constant -fullMatch
%:False
%{%(NumberOfThreads%)
%:0
%:default
export OMP_NUM_THREADS=%(NumberOfThreads%)
%}
runCommand cartesianMesh
%}
%:snappyHexMesh
runCommand blockMesh
which surfaceFeatures > /dev/null 2>&1
if [ $? == 0 ]
then
    runCommand surfaceFeatures
else
    runCommand surfaceFeatureExtract
fi

%{%(ParallelMesh%)
%:True
runCommand decomposePar
runCommand mpiexec -np %(NumberOfProcesses%) snappyHexMesh -overwrite -parallel
runCommand reconstructParMesh -constant
%:False
runCommand snappyHexMesh -overwrite
%}

%:gmsh
runCommand gmshToFoam "gmsh/%(Name%)_Geometry.msh"
runCommand transformPoints -scale "(0.001 0.001 0.001)"

%}
%{%(TwoDSettings/ConvertTo2D%)
%:True
runCommand changeDictionary
runCommand extrudeMesh
runCommand flattenMesh

%}

if [ ! -z $FOAM_API ] && [ $FOAM_API -ge 1906 ]
then
    runCommand surfaceMeshExtract mesh_outside.stl
else
    runCommand surfaceMeshTriangulate mesh_outside.stl
fi

runCommand surfaceTransformPoints -scale "(1000 1000 1000)" mesh_outside.stl mesh_outside.stl
